{"ast":null,"code":"var _jsxFileName = \"/Users/rajatgang/Devbox/creepy/sevakart/src/pages/shop-page/index.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collection-overview';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection-page';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/utils';\nimport { updateCollections } from '../../redux/shop/shopAction';\nimport WithSpinner from '../../components/with-spinner';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionsPageWithSpinner = WithSpinner();\n\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match = ''\n    } = this.props;\n    const {\n      loading = ''\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WithSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rajatgang/Devbox/creepy/sevakart/src/pages/shop-page/index.jsx"],"names":["React","CollectionOverview","connect","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionOverViewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","constructor","props","unsubscribeFromSnapshot","state","loading","componentDidMount","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,sBAA3D;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAGA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,kBAAD,CAAjD;AACA,MAAMS,0BAA0B,GAAGF,WAAW,EAA9C;;AACA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,uBANmB,GAMO,IANP;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMK,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAhB,MAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAC;AADI,OAAd;AAGD,KAND;AAOD;;AACDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAK,GAAG;AAAV,QAAiB,KAAKb,KAA5B;AACA,UAAM;AAACG,MAAAA,OAAO,GAAG;AAAX,QAAiB,KAAKD,KAA5B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAE3B,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAE0B,KAAK,CAACC,IAAK,cAA3B;AAA0C,MAAA,SAAS,EAAExB,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAQD;;AAhCoC;;AAmCvC,MAAMyB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,iBAAiB,EAAEiB,cAAc,IAC/BM,QAAQ,CAACvB,iBAAiB,CAACiB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAetB,OAAO,CACpB,IADoB,EAEpB2B,kBAFoB,CAAP,CAGblB,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport CollectionOverview from '../../components/collection-overview';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection-page';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/utils';\nimport { updateCollections } from '../../redux/shop/shopAction';\nimport WithSpinner from '../../components/with-spinner';\n\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionsPageWithSpinner = WithSpinner()\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading:false\n      })\n    });\n  }\n  render() {\n    const { match = '' } = this.props;\n    const {loading = ''} = this.state\n    return (\n      <div className='shop-page'>\n        <WithSpinner ></WithSpinner>\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route path={`${match.path}/:categoryId`} component={CollectionPage} />\n\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n\n"]},"metadata":{},"sourceType":"module"}
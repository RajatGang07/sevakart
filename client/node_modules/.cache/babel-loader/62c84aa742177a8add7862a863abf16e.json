{"ast":null,"code":"var _jsxFileName = \"/Users/rajatgang/Devbox/creepy/sevakart/client/src/components/sign-in/index.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/index';\nimport CustomButton from '../custom-button/index';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './index.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/rajatgang/Devbox/creepy/sevakart/client/src/components/sign-in/index.jsx"],"names":["React","useState","FormInput","CustomButton","connect","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport FormInput from '../form-input/index';\nimport CustomButton from '../custom-button/index';\nimport { connect } from 'react-redux';\nimport {\n    SignInContainer,\n    SignInTitle,\n    ButtonsBarContainer\n  } from './index.styles';\n  \n  import {\n    googleSignInStart,\n    emailSignInStart\n  } from '../../redux/user/userActions';\n  const SignIn = ({ emailSignInStart, googleSignInStart }) => {\n    const [userCredentials, setCredentials] = useState({\n      email: '',\n      password: ''\n    });\n  \n    const { email, password } = userCredentials;\n  \n    const handleSubmit = async event => {\n      event.preventDefault();\n  \n      emailSignInStart(email, password);\n    };\n  \n    const handleChange = event => {\n      const { value, name } = event.target;\n  \n      setCredentials({ ...userCredentials, [name]: value });\n    };\n  \n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n  \n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={password}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton\n              type='button'\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    );\n  };\n  \n  const mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) =>\n      dispatch(emailSignInStart({ email, password }))\n  });\n  \n  export default connect(\n    null,\n    mapDispatchToProps\n  )(SignIn);"]},"metadata":{},"sourceType":"module"}